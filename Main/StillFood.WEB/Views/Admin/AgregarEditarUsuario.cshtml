@model StillFood.Models.Usuario

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmAgregarEditarUsuario" }))
{
    <div class="row">
        <div class="col-lg-8 col-lg-offset-2">
            @Html.HiddenFor(usuario => usuario.Id)
            @Html.HiddenFor(usuario => usuario.IdEstado)
            @Html.HiddenFor(usuario => usuario.FechaAlta)
            @Html.HiddenFor(usuario => usuario.IdConfirmacion)
            @Html.HiddenFor(usuario => usuario.FechaExpConfirmacion)
            @Html.HiddenFor(usuario => usuario.IdRecuperoContraseña)
            <div class="form-group col-lg-12">
                @Html.HiddenFor(usuario => usuario.Id)
                @Html.TextBoxFor(usuario => usuario.NombreApellido, new { id = "txtNombreApellido", placeholder = "Nombre y Apellido", @class = "form-control glowing-border" })
                <div class="hide" id="txtNombreError_Usuario">
                    El campo "Nombre y Apellido" es obligatorio
                </div>
            </div>
            <div class="form-group col-lg-6">
                <div class='input-group date' id='dtpNacimiento'>
                    @Html.TextBoxFor(usuario => usuario.FechaNacimiento, new { id = "txtFechaNacimiento", placeholder = "Fecha de Nacimiento", @class = "form-control glowing-border" })
                    <span class="input-group-addon">
                        <span class="glyphicon glyphicon-calendar"></span>
                    </span>
                </div>
                <div class="hide" id="txtNacimientoError_Usuario">
                    El campo "Fecha de Nacimiento" es obligatorio
                </div>
            </div>
            <div class="form-group col-lg-6">
                @Html.TextBoxFor(usuario => usuario.Telefono, new { id = "txtTelefono", placeholder = "Teléfono", @class = "form-control glowing-border" })
            </div>
            <div class="form-group col-lg-12">
                @Html.TextBoxFor(usuario => usuario.Email, new { id = "txtEmailUsuario", placeholder = "Correo Electrónico", @class = "form-control glowing-border", type = "email" })
                <div class="hide" id="txtEmailError_Usuario">
                    El campo "Correo Electrónico" es obligatorio
                </div>
            </div>
            <div class="form-group col-lg-12">
                @Html.TextBoxFor(usuario => usuario.Contraseña, new { id = "txtContraseñaUsuario", placeholder = "Contraseña", @class = "form-control glowing-border", type = "password" })
                <div class="hide" id="txtContraseñaError_Usuario">
                    El campo "Contraseña" es obligatorio
                </div>
            </div>
            <div class="form-group col-lg-6">
               @Html.DropDownListFor(model => model.IdTipoUsuario, (from StillFood.Common.Enums.eTiposUsuarios e in Enum.GetValues(typeof(StillFood.Common.Enums.eTiposUsuarios))
                                                                    select new SelectListItem { Value = ((int)e).ToString(), Text = e.ToString() }), "Tipo de Usuario" , new { id = "cmbTiposUsuarios", @class = "form-control glowing-border", @onchange = "HabilitarComercios();" })
                <div class="hide" id="txtTipoUsuarioError_Usuario">
                    El campo "Tipo de Usuario" es obligatorio
                </div>
            </div>
            <div class="form-group col-lg-6">
                @Html.DropDownListFor(usuario => usuario.IdComercio, new SelectList(Model.Comercios, "Id", "Nombre"),"Comercio" , new { id = "cmbComercios", @class = "form-control glowing-border", data_placeholder = "Choose items", disabled = "disabled" })
                <div class="hide" id="txtComercioError_Usuario">
                    El campo "Comercio" es obligatorio
                </div>
            </div>
        </div>
    </div>
}